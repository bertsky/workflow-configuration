#!/usr/bin/env bash
# shellcheck disable=SC2086

set -eu
set -o pipefail
# set -x

### arbitrary XSL transformation for PAGE-XML in OCR-D
# 
# Finds and downloads all files in the input fileGrp
# of the workspace. Then for each page, finds the
# corresponding PAGE-XML file, and processes it with
# the given XSLT. The result is added to the output
# fileGrp.

which ocrd >/dev/null 2>/dev/null || { echo >&2 "ocrd not in \$PATH. Panicking"; exit 1; }
((BASH_VERSINFO<4 || BASH_VERSINFO==4 && BASH_VERSINFO[1]<4)) && echo >&2 "bash $BASH_VERSION is too old. Please install bash 4.4 or newer." && exit 1

SHAREDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
PRESERVE_NAMESPACE=1 # 1 preserves the input file's PAGE namespace prefix and URL (version)

MIMETYPE_PAGE=$(ocrd bashlib constants MIMETYPE_PAGE)
declare -A NAMESPACES
eval "NAMESPACES=( $(ocrd bashlib constants NAMESPACES) )"

function process_file {
    local in_fpath="$1" in_id="$2" in_pageId="$3" xsl="$4" param="$5" out_fpath="$6" out_id="$7" out_file_grp="$8"
    
    if ((PRESERVE_NAMESPACE)); then
        # preserve namespace and prefix
        xmlstarlet tr "$xsl" $param "$in_fpath" >"$out_fpath"
    else
        # stylesheet transforms to standard namespace:
        xmlstarlet tr <(cat <<EOF
<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet version="1.0"
  xmlns:xsl="${NAMESPACES[xsl]}"
  xmlns="${NAMESPACES[page]}">
  <xsl:output method="xml" version="1.0" 
    encoding="UTF-8" indent="yes"/>
  <xsl:template match="@*|text()|comment()|processing-instruction()">
    <xsl:copy/>
  </xsl:template>
  <xsl:template match="*">
    <xsl:element name="{local-name()}">
      <xsl:apply-templates select="@*|*"/>
    </xsl:element>
  </xsl:template>
</xsl:stylesheet>
EOF
) "$in_fpath" | xmlstarlet tr "$xsl" $param >"$out_fpath"
    fi

}
    
function main {
    # Load ocrd bashlib functions
    # shellcheck source=../core/ocrd/bashlib/lib.bash
    source $(ocrd bashlib filename)
    # override/redefine to include SHAREDIR:
    ocrd__list_resources () {
        ocrd ocrd-tool "$OCRD_TOOL_JSON" tool "$OCRD_TOOL_NAME" list-resources
        find "$SHAREDIR" -name "*.xsl"
    }
    ocrd__wrap "$SHAREDIR/ocrd-tool.json" "ocrd-page-transform" "$@"
    ocrd__minversion 2.29.0

    xsl="${params[xsl]}"
    xsltparam="${params[xslt-params]}"
    if test -e "$xsl"; then
        xsl="$(realpath "$xsl")"
    # FIXME: core should provide a mechanism for install-time (pre-distributed) resources
    elif test -e "$SHAREDIR/$xsl"; then
        xsl="$SHAREDIR/$xsl"
    elif ocrd__list_resources | fgrep -q "/$xsl"; then
        xsl="$(ocrd__list_resources | fgrep -m1 "/$xsl")"
    else
        ocrd__raise "cannot find xsl resource '$xsl'"
    fi
    cd "${ocrd__argv[working_dir]}"
    out_file_grp=${ocrd__argv[output_file_grp]}

    for ((n=0; n<${#ocrd__files[*]}; n++)); do
        local in_fpath="$(ocrd__input_file $n url)"
        local in_id="$(ocrd__input_file $n ID)"
        local in_pageId="$(ocrd__input_file $n pageId)"
        local out_id="$(ocrd__input_file $n outputFileId)"
        local out_fpath="$out_file_grp/${out_id}.xml"
        local out_mimetype="${params[mimetype]}"

        if ! test -f "${in_fpath#file://}"; then
           ocrd log error "input file ID=${in_id} (pageId=${in_pageId} MIME=${in_mimetype}) is not on disk"
           continue
        fi
        mkdir -p $out_file_grp

        ocrd log info "processing PAGE-XML input file $in_id ($in_pageId)"
        process_file "$in_fpath" "$in_id" "$in_pageId" "$xsl" "$xsltparam" "$out_fpath" "$out_id" "$out_file_grp"

        # Add PAGE file to METS
        declare -a options
        if [ -n "$in_pageId" ]; then
            options=( -g $in_pageId )
        else
            options=()
        fi
        if [[ "${ocrd__argv[overwrite]}" == true ]];then
            options+=( --force )
        fi
        options+=( -G $out_file_grp
                   -m $out_mimetype
                   -i "$out_id"
                   "$out_fpath" )
        ocrd workspace add "${options[@]}"
    done
}


main "$@"
